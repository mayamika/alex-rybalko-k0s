---
- name: Setup k0s
  ansible.builtin.include_role:
    name: setup_k0s

- name: Create service with install command
  register: install_initial_controller_cmd
  command: k0s install controller --force --config {{ k0s_config_dir }}/k0s.yaml
  changed_when: install_initial_controller_cmd | length > 0

- name: Enable and check service
  systemd:
    name: k0scontroller
    daemon_reload: yes
    enabled: yes
    state: restarted

- name: Wait for k8s apiserver
  wait_for:
    host: localhost
    port: 6443
    delay: 15
    timeout: 180

- name: Create worker join token
  register: worker_join_token
  command: k0s token create --role worker
  changed_when: worker_join_token | length > 0

- name: Store worker join token
  set_fact:
    join_token_worker: "{{ worker_join_token.stdout }}"
    cacheable: yes

- name: Create controller join token
  register: controller_join_token
  command: k0s token create --role controller
  changed_when: controller_join_token | length > 0

- name: Store controller join token
  set_fact:
    join_token_controller: "{{ controller_join_token.stdout }}"
    cacheable: yes

- name: Copy config file to user home directory
  copy:
    src: "{{ k0s_data_dir }}/pki/admin.conf"
    dest: ~{{ ansible_user }}/k0s-kubeconfig.yml
    remote_src: yes
    owner: "{{ ansible_user }}"
    mode: 0644

- name: Set controller IP in kubeconfig
  replace:
    path: ~{{ ansible_user }}/k0s-kubeconfig.yml
    regexp: 'localhost'
    replace: "{{ ansible_host }}"

- name: Copy kubeconfig
  fetch:
    src: "~{{ ansible_user }}/k0s-kubeconfig.yml"
    dest: "{{ artifacts_dir }}/k0s-kubeconfig.yml"
    flat: yes
    validate_checksum: no
